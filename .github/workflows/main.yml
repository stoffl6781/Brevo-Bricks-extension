name: Build and Deploy Plugin

on:
  push:
    branches:
      - main  # Wird ausgelöst, wenn Änderungen auf "main" gepusht werden
  release:
    types: [published]  # Wird ausgelöst, wenn ein neues Release veröffentlicht wird

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: updateserver 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set ZIP Filename from Repository Name
        run: echo "PLUGIN_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV
        
      - name: Debug environment Secrets
        run: |
          echo "SSH_USER: ${{ secrets.SSH_USER }}"
          echo "SSH_HOST: ${{ secrets.SSH_HOST }}"
          if [[ -z "${{ secrets.SSH_PASS }}" ]]; then
            echo "SSH_PASS ist leer oder nicht gesetzt!"
            exit 1
          else
            echo "SSH_PASS ist gesetzt!"
          fi


      - name: Build ZIP Archive
        run: |
          zip -r $PLUGIN_NAME.zip . -x ".*" -x "__MACOSX" -x ".git/*" -x ".github/*"

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Upload ZIP to Server via SCP (mit Passwort)
        run: |
          sshpass -p "${{ secrets.SSH_PASS }}" scp -o StrictHostKeyChecking=no $PLUGIN_NAME.zip ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}

      - name: Test SSH Connection (optional)
        run: |
          sshpass -p "${{ secrets.SSH_PASS }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo SSH-Verbindung erfolgreich"

      - name: Upload ZIP to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.PLUGIN_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Deployment Success
        run: echo "Plugin $PLUGIN_NAME erfolgreich hochgeladen!"
