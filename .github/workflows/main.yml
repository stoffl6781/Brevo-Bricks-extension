name: Build and Deploy Plugin

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: updateserver

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extrahiere den Stable-Tag aus readme.txt
        id: extract_tag
        run: |
          TAG=$(grep -i "^Stable tag:" readme.txt | awk '{print $3}')
          echo "Stable Tag gefunden: $TAG"
          echo "PLUGIN_TAG=$TAG" >> $GITHUB_ENV

      - name: Setze und pushe Git-Tag (falls nicht vorhanden)
        run: |
          if [ -z "$(git tag -l "$PLUGIN_TAG")" ]; then
            git tag "$PLUGIN_TAG"
            git push origin "$PLUGIN_TAG"
            echo "Neues Git-Tag $PLUGIN_TAG erstellt und gepusht."
          else
            echo "Git-Tag $PLUGIN_TAG existiert bereits."
          fi

      - name: Build ZIP Archive
        run: |
          zip -r $PLUGIN_NAME.zip . -x ".*" -x "__MACOSX" -x ".git/*" -x ".github/*"

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Upload ZIP to Server via SCP
        run: |
          sshpass -p "${{ secrets.SSH_PASS }}" scp -o StrictHostKeyChecking=no $PLUGIN_NAME.zip ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}

      - name: Upload ZIP to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.PLUGIN_TAG }}  # Automatisch aus readme.txt extrahiert
          files: ${{ env.PLUGIN_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Deployment Success
        run: echo "Plugin $PLUGIN_NAME erfolgreich hochgeladen!"
